Arduino receives commands from ESP8266 (i.e. NodeMCU), performs requested actions and responds if needed.
To monitor the peripheral devices (i.e. inputs, outputs, relays and RTC in this demo), NodeMCU polls Arduino with 'S' command (see below).


--
All commands are two char long.

The first char determines an operation we want to perform:
	R - enable relay,
	r - disable relay,
	O - enable DOUT,
	o - disable DOUT,
	S/s - send device state snapshot (inputs state, time, etc, with one single command), see below.

The second one is an object index:
	1-8 for DOUTS,
	1-6 for relays,
	can be any char (except 'C') if the first char was 'S'/'s'.

'C' char clears command buffer, it was used for debugging purposes.


For example:
	R1 - enable relay 1,
	r5 - disable relay 5,
	O2 - enable DOUT 2,
	o3 - disable DOUT 3,
	S0 - send state.

	
--
No commands send any answers except 'S'.
'S' command's response has the following format: 'RRRRRRIIIIIIIIOOOOOOOOAAAAAAAAHHMMYYYYMMDDe', where:
	RRRRRR 		- state of the relays. one byte per relay, '1' if enabled, '0' if disabled.
	IIIIIIII 	- state of the DINs. one byte per DIN. '1' if enabled, '0' if disabled.
	OOOOOOOO 	- state of the outputs. '1' if enabled, '0' if disabled.
	AAAAAAAA 	- state of the analog inputs. 0000-1023. 4 bytes per AIN.
	HH 			- hours, two-digit, 00-23.
	MM 			- minutes, two-digit, 00-59.
	YYYY 		- year, four digits.
	MM 			- month, two-digit, 01-12.
	DD 			- day, 00-(depends on month, 28-31).
	e 			- 'e' char (end of message).


Example  (remove spaces, they are only for readability and aren't present in real responses):

"100111 11110000 11110101 01020128012100200011102401110044 1053 20140201 e"
 ^^^^^^ ^^^^^^^^ ^^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ^^^^ ^^^^^^^^ ^
 relays   dins    douts            analog inputs           time   date   end-of-message
                                                              (feb01,2014)
